@import 'colors';

$themes: (
	light: (
		default: color(black),
		background: color(lightYellow),
		secondaryBackground: color(mediumYellow),
		textMuted: color(mediumGrey),
		text: color(lighterGrey),
		accent: color(accent),
		scrollbar: color(mediumGrey),
		heading: color(mediumGrey),
		subHeading: color(lighterGrey),
		navbarBackground: rgba(color(lightYellow), 0.75),
		sideNavbarBackground: color(mediumYellow),
		navbarBoxShadow: color(lightYellow),
		navbarLogo: color(mediumGrey),
		navbarLogoHover: color(darkerGrey),
		navbarLink: color(lighterGrey),
		navbarBurgerMenuIcon: color(mediumGrey),
		navbarLinkHover: color(darkerGrey),
		navbarLinkActive: color(darkBlue),
		footerIcon: color(mediumGrey),
		footerIconHover: color(darkerGrey),
		homeIcon: color(mediumGrey),
		cursorDot: color(mediumGrey),
		cursorRing: rgba(color(lightGrey), 0.4),
		tooltipBackground: color(darkYellow),
	),
	dark: (
		default: color(white),
		background: color(darkBlue),
		secondaryBackground: color(mediumBlue),
		text: color(lightGreyBlue),
		textMuted: color(mediumGreyBlue),
		accent: color(accent),
		scrollbar: color(mediumGreyBlue),
		heading: color(lightBlue),
		subHeading: color(lightGreyBlue),
		navbarBackground: rgba(color(darkBlue), 0.75),
		sideNavbarBackground: color(mediumBlue),
		navbarBoxShadow: color(darkBlue),
		navbarLogo: color(lightGreyBlue),
		navbarLogoHover: color(lightGrey),
		navbarLink: color(lightGreyBlue),
		navbarBurgerMenuIcon: color(lightBlue),
		navbarLinkHover: color(lightGrey),
		navbarLinkActive: color(white),
		footerIcon: color(mediumGreyBlue),
		footerIconHover: color(lightGrey),
		homeIcon: color(lightBlue),
		cursorDot: color(lightBlue),
		cursorRing: rgba(color(mediumGrey), 0.4),
		tooltipBackground: color(darkGreyBlue),
	),
);

@mixin theme {
	@each $theme, $map in $themes {
		:global(.theme-#{$theme}) & {
			$theme-map: () !global;
			@each $key, $submap in $map {
				$value: map-get(map-get($themes, $theme), '#{$key}');
				$theme-map: map-merge(
					$theme-map,
					(
						$key: $value,
					)
				) !global;
			}

			@content;
			$theme-map: null !global;
		}
	}
}

@function themedColor($key) {
	@return map-get($theme-map, $key);
}
